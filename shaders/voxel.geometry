#version 330 core

uniform mat4 FactorMatrix;

layout(points) in;
layout(triangle_strip, max_vertices=15) out;

in int geo_size[];
in vec4 geo_color[];

out vec4 frag_color;

void main(void)
{	
	frag_color = geo_color[0];

	ivec4 nearBottomLeft = ivec4(0, 0, 0, 0);
	ivec4 nearBottomRight = ivec4(geo_size[0], 0, 0, 0);
	ivec4 nearTopRight = ivec4(geo_size[0], geo_size[0], 0, 0);
	ivec4 nearTopLeft = ivec4(0, geo_size[0], 0, 0);
	ivec4 farBottomLeft = ivec4(0, 0, geo_size[0], 0);
	ivec4 farBottomRight = ivec4(geo_size[0], 0, geo_size[0], 0);
	ivec4 farTopRight = ivec4(geo_size[0], geo_size[0], geo_size[0], 0);
	ivec4 farTopLeft = ivec4(0, geo_size[0], geo_size[0], 0);
	
	gl_Position = FactorMatrix * (gl_in[0].gl_Position + farTopLeft);
	EmitVertex();
	gl_Position = FactorMatrix * (gl_in[0].gl_Position + farTopRight);
	EmitVertex();
	gl_Position = FactorMatrix * (gl_in[0].gl_Position + nearTopLeft);
	EmitVertex();
	gl_Position = FactorMatrix * (gl_in[0].gl_Position + nearTopRight);
	EmitVertex();
	gl_Position = FactorMatrix * (gl_in[0].gl_Position + nearBottomRight);
	EmitVertex();
	gl_Position = FactorMatrix * (gl_in[0].gl_Position + farTopRight);
	EmitVertex();
	gl_Position = FactorMatrix * (gl_in[0].gl_Position + farBottomRight);
	EmitVertex();
	gl_Position = FactorMatrix * (gl_in[0].gl_Position + farTopLeft);
	EmitVertex();
	gl_Position = FactorMatrix * (gl_in[0].gl_Position + farBottomLeft);
	EmitVertex();
	gl_Position = FactorMatrix * (gl_in[0].gl_Position + nearTopLeft);
	EmitVertex();
	gl_Position = FactorMatrix * (gl_in[0].gl_Position + nearBottomLeft);
	EmitVertex();
	gl_Position = FactorMatrix * (gl_in[0].gl_Position + nearBottomRight);
	EmitVertex();
	gl_Position = FactorMatrix * (gl_in[0].gl_Position + farBottomLeft);
	EmitVertex();
	gl_Position = FactorMatrix * (gl_in[0].gl_Position + farBottomRight);
	EmitVertex();
	gl_Position = FactorMatrix * (gl_in[0].gl_Position + farTopLeft);
	EmitVertex();
	EndPrimitive();
}
